@use "./config.scss" as config;
:root {
	--container-save-space: 30px;
	--section-space: 50px;

	--container-width: 1580px;
	// --container-padding: 30px;
	@media (max-width: 1680px) {
		--container-width: 1320px;
	}
	
	@media (max-width: config.$mbpT) {
		--section-space: 36px;
	}
	// @media (max-width: config.$mbpM) {
	// 	--section-space: 24px;
	// }
	
	@media (max-width: config.$mbpMM) {
		--container-save-space: 15px;
	}
}
html {
	--scroll-width: 0px;
	&:not(.is-mobile) {
		--scroll-width: 17px;
	}
	--scroll-compensation: 0px;
}
html.scroll-lock-by-drawer {
	overflow: hidden;
	--scroll-compensation: var(--scroll-width);
	padding-right: var(--scroll-width);
}
body {
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	min-height: 100%;
}
body main {
	flex: 1 1 auto;
}
.container {
	width: 100%;
	margin: auto;
	padding-left: var(--container-save-space);
	padding-right: var(--container-save-space);
	&_wide {
		max-width: calc(var(--container-width) - var(--container-save-space) * 2);
		
	}
}
// UI KIT
// .container {
// 	width: 100%;
// 	max-width: var(--container-width);
// 	padding: 0px var(--container-padding);
// 	margin: 0 auto;
// }

.flex-even {
	&__inner {
		display: flex;
		flex-wrap: wrap;
		justify-content: var(--justify-content);
		margin-left: calc(var(--row-gap, var(--gap, 0)) * -1);
		margin-top: calc(var(--column-gap, var(--gap, 0)) * -1);
	}
	&__item {
		flex: 0 0 var(--item-flex-basis);
		padding-left: var(--row-gap, var(--gap, 0));
		padding-top: var(--column-gap, var(--gap, 0));
	}
}
main {
	position: relative;
	left: 0;
	top: 0;
	display: flex;
	flex-direction: column;
}
.page-background {
	--ratio: 125%;
	position: absolute;
	left: 0;
	top: 0;
	z-index: -1;
	width: 100%;
	height: 100%;
	overflow: hidden;
	&__wrap {
		position: absolute;
		left: 50%;
		top: -5%;
		width: 140vw;
		min-width: 1200px;
		transform: translateX(-50%);
	}
	html:not([data-theme="light"]) &__img_light {
		display: none;
	}
	html:not([data-theme="dark"]) &__img_dark {
		display: none;
	}
}